import telebot
import platform
import os
import psutil
import webbrowser
import time
import requests
import mouse
import tempfile
from PIL import ImageGrab
from pygetwindow import getWindowsWithTitle
import sounddevice as sd
import numpy as np
import wavio
from screeninfo import get_monitors as screeninfo
import urllib.request
my_id = 6323712252
bot = telebot.TeleBot('6367707654:AAGF8iXELjKakdxkGUBvVe92utXOw8Y_WjI')
recording = False
EMOJI_SCREENSHOT = "üì∏"
EMOJI_WEBCAM = "üé•"
EMOJI_CPU = "üíª"
EMOJI_PROCESS = "üîÑ"
EMOJI_MIC = "üé§"
EMOJI_POWER = "‚ö°"
EMOJI_APP = "üì≤"
EMOJI_SPOTIFY = "üéµ"
EMOJI_DISCORD = "üí¨"
EMOJI_CHROME = "üåê"
EMOJI_BACK = "üîô"
EMOJI_VIDEO = "üì∫"
EMOJI_MISH_EBANAYA = "üñ±Ô∏è"
@bot.message_handler(regexp='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º—ã—à—å—é')
def handle_mouse_control(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row("‚Üë –í–≤–µ—Ä—Ö", "‚¨ÖÔ∏è –í–ª–µ–≤–æ", "‚û°Ô∏è –í–ø—Ä–∞–≤–æ")
    markup.row("‚¨áÔ∏è –í–Ω–∏–∑", "üñ± –ö–ª–∏–∫", "‚è™ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=markup)

@bot.message_handler(regexp='–ö–ª–∏–∫')
def handle_mouse_click(message):
    mouse.click()

@bot.message_handler(regexp='‚¨ÖÔ∏è –í–ª–µ–≤–æ')
def handle_mouse_move_left(message):
    mouse.move(-50, 0, absolute=False, duration=0.2)

@bot.message_handler(regexp='‚Üë –í–≤–µ—Ä—Ö')
def handle_mouse_move_up(message):
    mouse.move(0, -50, absolute=False, duration=0.2)

@bot.message_handler(regexp='‚¨áÔ∏è –í–Ω–∏–∑')
def handle_mouse_move_down(message):
    mouse.move(0, 50, absolute=False, duration=0.2)

@bot.message_handler(regexp='‚û°Ô∏è –í–ø—Ä–∞–≤–æ')
def handle_mouse_move_right(message):
    mouse.move(50, 0, absolute=False, duration=0.2)

@bot.message_handler(regexp='‚è™ –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
def return_to_main_menu(message):
    send_welcome(message)

@bot.message_handler(func=lambda message: message.text == "–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ")
def send_computer_info_request(message):
    bot.send_message(message.chat.id, "–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ‚Ä¶")
    computer_info(message)

@bot.message_handler(regexp='–ö–ª–∏–∫ –º—ã—à—å—é')
def handle_mouse_click(message):
    mouse.click()

@bot.message_handler(regexp='–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –º—ã—à—å –≤–ª–µ–≤–æ')
def handle_mouse_move_left(message):
    mouse.move(-50, 0, absolute=False, duration=0.2)

@bot.message_handler(regexp='–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –º—ã—à—å –≤–ø—Ä–∞–≤–æ')
def handle_mouse_move_right(message):
    mouse.move(50, 0, absolute=False, duration=0.2)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –º—ã—à—å –≤–ª–µ–≤–æ")
    markup.add("–ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –º—ã—à—å –≤–ø—Ä–∞–≤–æ")
    
@bot.message_handler(regexp='‚è™–ù–∞–∑–∞–¥‚è™')
def return_to_main_menu(message):
    send_welcome(message)
    
@bot.message_handler(regexp=f'–í–∏–¥–µ–æ –ø–æ —Å—Å—ã–ª–∫–µ')
def play_video(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ:')
    bot.register_next_step_handler(message, open_video)

def open_video(message):
    try:
        url = message.text
        webbrowser.open(url)
        bot.send_message(message.chat.id, '–í–∏–¥–µ–æ –∑–∞–ø—É—â–µ–Ω–æ.')
    except Exception as e:
        bot.send_message(message.chat.id, f'–û—à–∏–±–∫–∞: {e}')



@bot.message_handler(regexp=f'–ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö {EMOJI_PROCESS}')
def get_processes_info(message):
    processes = get_active_processes_info()
    for chunk in chunks(processes, 8):
        processes_info = '\n'.join(chunk)
        bot.send_message(message.chat.id, processes_info)

def get_system_load():
    cpu_percent = psutil.cpu_percent()
    memory = psutil.virtual_memory()
    memory_percent = memory.percent
    memory_total = round(memory.total / (1024**3), 2)
    memory_used = round(memory.used / (1024**3), 2)
    gpu_percent = '–Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ'  
    return f"{EMOJI_CPU} CPU {cpu_percent}%\n–ü–∞–º—è—Ç—å: {memory_used} –ì–ë / {memory_total} –ì–ë ({memory_percent}%)\nGPU: {gpu_percent}%"

def get_active_processes_info():
    processes = []
    for proc in psutil.process_iter(['pid', 'name', 'cpu_percent', 'memory_percent']):
        processes.append(f"PID: {proc.info['pid']}, –ò–º—è: {proc.info['name']}, CPU: {proc.info['cpu_percent']}%, –ü–∞–º—è—Ç—å: {proc.info['memory_percent']}%")
    return processes

def chunks(lst, n):
    for i in range(0, len(lst), n):
        yield lst[i:i + n]

def get_top_processes():
    processes = []
    for proc in sorted(psutil.process_iter(['pid', 'name', 'cpu_percent']), key=lambda x: x.info['cpu_percent'], reverse=True)[:5]:
        processes.append(f"PID: {proc.info['pid']}, –ò–º—è: {proc.info['name']}, CPU: {proc.info['cpu_percent']}%")
    return processes       

@bot.message_handler(regexp=f'–°–≤–µ–¥–µ–Ω–∏—è –æ –Ω–∞–≥—Ä—É–∑–∫–µ {EMOJI_CPU}')
def get_system_load_info(message):
    load_info = get_system_load()
    top_processes = get_top_processes()
    processes_info = "\n".join(top_processes)
    bot.send_message(message.chat.id, f"{load_info}\n\n–°–∞–º—ã–µ –Ω–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã:\n{processes_info}")

@bot.message_handler(regexp=f'–∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å {EMOJI_PROCESS}')
def terminate_process(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è:')
    bot.register_next_step_handler(message, confirm_termination)

@bot.message_handler(regexp=f'–∑–∞–ø–∏—Å–∞—Ç—å –∑–≤—É–∫ {EMOJI_MIC}')
def start_recording(message):
    global recording
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(f"–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å {EMOJI_MIC}")
    bot.send_message(message.chat.id, '–ù–∞—á–∏–Ω–∞—é –∑–∞–ø–∏—Å—å...', reply_markup=markup)
    recording = True

@bot.message_handler(regexp=f'–≤—ã–∫–ª—é—á–∏—Ç—å {EMOJI_POWER}')
def shutdown_with_countdown(message):
    bot.send_message(message.chat.id, '–í—ã–∫–ª—é—á–∞—é –∫–æ–º–ø—å—é—Ç–µ—Ä...')
    for i in range(3, 0, -1):
        bot.send_message(message.chat.id, str(i))
        time.sleep(1)
    os.system('shutdown /s /t 1')

@bot.message_handler(regexp=f'–æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å {EMOJI_MIC}')
def send_audio(message):
    global recording
    if recording:
        bot.send_message(message.chat.id, '–ó–∞–∫–∞–Ω—á–∏–≤–∞—é –∑–∞–ø–∏—Å—å...')
        path = tempfile.gettempdir() + '/audio.wav'
        duration = 5
        fs = 44100
        recording_data = sd.rec(int(fs * duration), samplerate=fs, channels=1, dtype=np.int16)
        sd.wait()
        wavio.write(path, recording_data, fs, sampwidth=2)
        with open(path, 'rb') as audio_file:
            bot.send_audio(message.chat.id, audio_file)
        os.remove(path)
        markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(f"–ü–æ–ª—É—á–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç {EMOJI_SCREENSHOT}")
        markup.add(f"–ü–æ–ª—É—á–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç —Å –≤–µ–±–∫–∞–º–µ—Ä—ã {EMOJI_WEBCAM}")
        markup.add(f"–ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö {EMOJI_PROCESS}")
        markup.add(f"–≤—ã–∫–ª—é—á–∏—Ç—å {EMOJI_POWER}")
        markup.add(f"–∑–∞–ø–∏—Å–∞—Ç—å –∑–≤—É–∫ {EMOJI_MIC}")
        bot.send_message(message.chat.id, '–ó–∞–ø–∏—Å—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞', reply_markup=markup)
        recording = False
    else:
        bot.send_message(message.chat.id, '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞–ø–∏—Å–∏.')

@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(f"–ü–æ–ª—É—á–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç {EMOJI_SCREENSHOT}")
    markup.add(f"–ü–æ–ª—É—á–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç —Å –≤–µ–±–∫–∞–º–µ—Ä—ã {EMOJI_WEBCAM}")
    markup.add(f"–°–≤–µ–¥–µ–Ω–∏—è –æ –Ω–∞–≥—Ä—É–∑–∫–µ {EMOJI_CPU}")  
    markup.add(f"–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö {EMOJI_PROCESS}")
    markup.add(f"–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å {EMOJI_PROCESS}")
    markup.add(f"–ó–∞–ø–∏—Å–∞—Ç—å –∑–≤—É–∫ {EMOJI_MIC}")
    markup.add(f"–í—ã–∫–ª—é—á–∏—Ç—å {EMOJI_POWER}")
    markup.add(f"–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É {EMOJI_APP}")
    markup.add(f"–í–∏–¥–µ–æ –ø–æ —Å—Å—ã–ª–∫–µ {EMOJI_VIDEO}")
    markup.add(f"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º—ã—à—å—é {EMOJI_MISH_EBANAYA}")
    bot.send_message(message.chat.id, '–ö–æ–º–ø—å—é—Ç–µ—Ä –∑–∞–ø—É—â–µ–Ω', reply_markup=markup)

@bot.message_handler(regexp=f'–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É {EMOJI_APP}')
def choose_program(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(f"Spotify {EMOJI_SPOTIFY}")
    markup.add(f"Discord {EMOJI_DISCORD}")
    markup.add(f"Chrome {EMOJI_CHROME}")
    markup.add(f"–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ {EMOJI_BACK}")
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É:', reply_markup=markup)

@bot.message_handler(regexp=f'Spotify {EMOJI_SPOTIFY}')
def open_spotify(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(f"–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ {EMOJI_BACK}")
    bot.send_message(message.chat.id, '–ó–∞–ø—É—â–µ–Ω–æ Spotify.', reply_markup=markup)
    webbrowser.open('C:/Users/Savva/AppData/Roaming/Spotify/Spotify.exe')

@bot.message_handler(regexp=f'Discord {EMOJI_DISCORD}')
def open_discord(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(f"–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ {EMOJI_BACK}")
    bot.send_message(message.chat.id, '–ó–∞–ø—É—â–µ–Ω Discord.', reply_markup=markup)
    webbrowser.open('C:/ProgramData/Savva/Discord/Updater.exe')

@bot.message_handler(regexp=f'Chrome {EMOJI_CHROME}')
def open_chrome(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(f"–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ {EMOJI_BACK}")
    bot.send_message(message.chat.id, '–ó–∞–ø—É—â–µ–Ω Chrome.', reply_markup=markup)
    webbrowser.open('C:/Program Files/Google/Chrome/Application/chrome.exe')

@bot.message_handler(regexp=f'–ø–æ–ª—É—á–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç {EMOJI_SCREENSHOT}')
def get_screenshot(message):
    path = tempfile.gettempdir() + '/screenshot.png'
    screenshot = ImageGrab.grab()
    screenshot.save(path, 'PNG')
    bot.send_photo(message.chat.id, open(path, 'rb'))

@bot.message_handler(regexp=f'–ø–æ–ª—É—á–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç —Å –≤–µ–±–∫–∞–º–µ—Ä—ã {EMOJI_WEBCAM}')
def get_webcam_screenshot(message):
    camera_window = getWindowsWithTitle("Camera Preview")
    if len(camera_window) > 0:
        camera_window[0].activate()
        screenshot = ImageGrab.grab(bbox=camera_window[0]._rect)
        path = tempfile.gettempdir() + '/webcam_screenshot.png'
        screenshot.save(path, 'PNG')
        bot.send_photo(message.chat.id, open(path, 'rb'))
    else:
        bot.send_message(message.chat.id, '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –æ–∫–Ω–æ —Å –∫–∞–º–µ—Ä–æ–π')

@bot.message_handler(regexp=f'–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ {EMOJI_BACK}')
def return_to_main_menu(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(f"–ü–æ–ª—É—á–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç {EMOJI_SCREENSHOT}")
    markup.add(f"–ü–æ–ª—É—á–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç —Å –≤–µ–±–∫–∞–º–µ—Ä—ã {EMOJI_WEBCAM}")
    markup.add(f"–°–≤–µ–¥–µ–Ω–∏—è –æ –Ω–∞–≥—Ä—É–∑–∫–µ {EMOJI_CPU}")
    markup.add(f"–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö {EMOJI_PROCESS}")
    markup.add(f"–ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å {EMOJI_PROCESS}")
    markup.add(f"–ó–∞–ø–∏—Å–∞—Ç—å –∑–≤—É–∫ {EMOJI_MIC}")
    markup.add(f"–í—ã–∫–ª—é—á–∏—Ç—å {EMOJI_POWER}")
    markup.add(f"–ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É {EMOJI_APP}")
    markup.add(f"–í–∏–¥–µ–æ –ø–æ —Å—Å—ã–ª–∫–µ {EMOJI_VIDEO}")
    markup.add(f"–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º—ã—à—å—é {EMOJI_MISH_EBANAYA}")
    bot.send_message(message.chat.id, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=markup)

def confirm_termination(message):
    try:
        process_number = int(message.text)
        processes = psutil.process_iter(['pid', 'name'])
        for proc in processes:
            if proc.info['pid'] == process_number:
                process_name = proc.info['name']
                proc.terminate()
                bot.send_message(message.chat.id, f'–ü—Ä–æ—Ü–µ—Å—Å "{process_name}" –±—ã–ª –∑–∞–≤–µ—Ä—à–µ–Ω.')
                return
        bot.send_message(message.chat.id, '–ü—Ä–æ—Ü–µ—Å—Å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.')
    except ValueError:
        bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.')

bot.infinity_polling()
